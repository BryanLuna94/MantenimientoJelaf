@{
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
    ViewBag.Navigation = "Autenticacion";
    ViewBag.Title = "Login";
}

<div class="white-box" id="appLogin">
    <h3 class="box-title m-b-10">Iniciar sesión</h3>
    <small>Introduzca sus datos a continuación</small>
    <form class="form-horizontal new-lg-form" ref="loginform" id="loginform" method="get" v-on:submit.prevent="ingresar" action="@Url.Action("Redirect", "Autenticacion")" autocomplete="off">
        <div class="form-group m-t-10">
            <div class="col-xs-12">
                <label>USUARIO</label>
                <v-select v-model="objUsuario.codiUsuario"
                          :options="list.usuario"
                          index="Codigo"
                          label="Descripcion"
                          @@search="getUsuario"
                          ref="codiUsuario"
                          @@keypress.13.prevent="SetFocus"
                          placeholder="--Seleccione--">
                </v-select>
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12">
                <label>Contraseña</label>
                <input class="form-control"
                       v-model="objUsuario.Password"
                       id="Contraseña"
                       type="password"
                       @@keypress.enter.prevent="ingresar"
                       ref="Password"
                       placeholder="Contraseña">
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <div class="checkbox checkbox-info pull-left p-t-0">
                    <input id="checkbox-signup" type="checkbox">
                    <label for="checkbox-signup"> Recuérdame </label>
                </div>
                <a href="javascript:void(0)" id="to-recover" class="text-dark pull-right"><i class="fa fa-lock m-r-5"></i> Olvidé mi pwd?</a>
            </div>
        </div>
        <div class="form-group text-center m-t-20">
            <div class="col-xs-12">
                <button class="btn btn-info btn-lg btn-block btn-rounded text-uppercase waves-effect waves-light" ref="bntSubmit" type="submit">Iniciar sesión</button>
            </div>
        </div>
    </form>
    <form class="form-horizontal" id="recoverform" action="@Url.Action("Login", "Autenticacion")">
        <div class="form-group ">
            <div class="col-xs-12">
                <h3>Recover Password</h3>
                <p class="text-muted">Ingrese su correo electrónico y las instrucciones serán enviadas a usted! </p>
            </div>
        </div>
        <div class="form-group ">
            <div class="col-xs-12">
                <input class="form-control" type="text" required="" placeholder="Email">
            </div>
        </div>
        <div class="form-group text-center m-t-20">
            <div class="col-xs-12">
                <button class="btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light" type="submit">Reiniciar</button>
            </div>
        </div>
    </form>
</div>

@section scripts{
    <script type="text/javascript">
        let appLogin = new Vue({
            el: '#appLogin',
            data: {
                objUsuario: {
                    codiUsuario: '',
                    Password: ''
                },
                list: {
                    usuario: []
                }
            },
            created: async function () {
                await this.getUsuario('');
            },
            mounted: async function () {
                this.$nextTick(() => {
                    this.SetFocus();
                });
            },
            methods: {
                getUsuario: async function (value) {
                    let _this = this;
                    await axios.get(getBaseUrl.obtenerUrlAbsoluta('Base/ListUsuariosAutocomplete'), { params: { value: value } })
                        .then(res => {
                            if (res.data.Estado) {
                                _this.list.usuario = (res.data.Valor.List) ? res.data.Valor.List : [];
                            }
                        }).catch(error => {
                            Notifications.Messages.error('Ocurrió una excepción en el metodo getUsuario');
                        });
                },
                ingresar: async function () {
                    if (this.validateForm()) {
                        await axios.post(getBaseUrl.obtenerUrlAbsoluta("Autenticacion/Login"), { codiUsuario: this.objUsuario.codiUsuario, password: this.objUsuario.Password })
                            .then(async res => {
                                if (res.data.Estado) {
                                    Notifications.Messages.success("USUARIO AUTORIZADO.");
                                    setTimeout(() => { this.$refs.loginform.submit(); }, 1800);
                                } else if (res.data.tipoNotificacion) {
                                    ProcessMessage(res.data.tipoNotificacion, res.data.mensaje);
                                }
                            })
                            .catch(error => {
                                Notifications.Messages.error(error.message);
                            });
                    } else {
                        this.SetFocus();
                    }
                },
                validateForm: function () {
                    return (this.objUsuario.codiUsuario && this.objUsuario.Password) ? true : false;
                },
                SetFocus: function () {
                    if (!this.objUsuario.codiUsuario) {
                        this.$refs.codiUsuario.$refs.search.focus();
                    } else if (!this.objUsuario.Password) {
                        this.$refs.Password.focus();
                    } else {
                        this.$refs.bntSubmit.focus();
                    }
                }
            },
            computed: {
                FullFields: function () {
                    return this.validateForm();
                }
            },
            watch: {
                "objUsuario.codiUsuario": function (newval, oldval) {
                    if (newval) {
                        this.SetFocus();
                    }
                }
            }
        });
    </script>
}